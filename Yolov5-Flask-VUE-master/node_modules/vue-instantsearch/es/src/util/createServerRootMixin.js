import{warn as e}from"./warn.js";import t from"vue";import n from"instantsearch.js/es";import r from"algoliasearch-helper";var i=r.SearchResults,s=r.SearchParameters;function a(e){var n={serverPrefetch:void 0,fetch:void 0,_base:void 0,name:"ais-ssr-root-component",router:e.$router,store:e.$store},r=new(e.$vnode?e.$vnode.componentOptions.Ctor.extend(n):t.component(Object.assign({},e.$options,n)))({propsData:e.$options.propsData});return r.$slots=e.$slots,r.$root=e.$root,r.$options.serverPrefetch=[],r}function o(t,a,o,c){var u,f=r(a,o),d=n(t);return d.findResultsState=function(e){var t,n;try{t=require("vue-server-renderer/basic")}catch(e){}if(!t)throw new Error("you need to install vue-server-renderer");return Promise.resolve().then(function(){(n=c(e)).instantsearch.helper=f,n.instantsearch.mainHelper=f,n.instantsearch.mainIndex.init({instantSearchInstance:n.instantsearch,parent:null,uiState:n.instantsearch._initialUiState})}).then(function(){return function(e,t){return new Promise(function(n,r){return t(e,function(e,t){e&&r(e),n(t)})})}(n,t)}).then(function(){return function(e){return new Promise(function(t,n){e.searchOnlyWithDerivedHelpers(),e.derivedHelpers[0].on("result",function(){t()}),e.derivedHelpers.forEach(function(e){return e.on("error",function(e){n(e)})})})}(f)}).then(function(){var e={};return function e(t,n){return n(t),t.getWidgets().forEach(function(t){"ais.index"===t.$$type&&(n(t),e(t,n))})}(n.instantsearch.mainIndex,function(t){e[t.getIndexId()]=t.getResults()}),d.hydrate(e),u=Object.keys(e).map(function(t){var n=e[t],r=n._state,i=n._rawResults;return[t,{_state:Object.keys(r).reduce(function(e,t){return e[t]=r[t],e},{}),_rawResults:i}]}).reduce(function(e,t){var n=t[0],r=t[1];return e[n]=r,e},{__identifier:"stringified"}),d.getState()})},d.getState=function(){if(!u)throw new Error("You need to wait for findResultsState to finish");return u},d.__forceRender=function(e,t){var n=t.getHelper(),r=d.__initialSearchResults[t.getIndexId()];if(r){var i=r._state;n.state=i,e.render({helper:n,results:r,scopedResults:t.getScopedResults().map(function(e){return Object.assign(e,{results:d.__initialSearchResults[e.indexId]})}),state:i,templatesConfig:{},createURL:t.createURL,instantSearchInstance:d,searchMetadata:{isSearchStalled:!1}})}},d.hydrate=function(t){if(t){var n="stringified"===t.__identifier?Object.keys(t).reduce(function(e,n){return"__identifier"===n?e:(e[n]=new i(new s(t[n]._state),t[n]._rawResults),e)},{}):t;d.__initialSearchResults=n,d.helper=f,d.mainHelper=f,d.mainIndex.init({instantSearchInstance:d,parent:null,uiState:d._initialUiState})}else e("The result of `findResultsState()` needs to be passed to `hydrate()`.")},d}function c(e){void 0===e&&(e={});var t=e.searchClient,n=e.indexName,r=e.$cloneComponent;if(void 0===r&&(r=a),!t||!n)throw new Error("createServerRootMixin requires `searchClient` and `indexName` in the first argument");var i=o(e,t,n,r);return{provide:function(){return{$_ais_ssrInstantSearchInstance:this.instantsearch}},data:function(){return{instantsearch:i}}}}export{c as createServerRootMixin};
//# sourceMappingURL=createServerRootMixin.js.map
