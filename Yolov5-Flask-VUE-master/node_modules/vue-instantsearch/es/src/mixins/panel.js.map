{"version":3,"file":"panel.js","sources":["../../../src/mixins/panel.js"],"sourcesContent":["import Vue from 'vue';\n\nexport const PANEL_EMITTER_NAMESPACE = 'instantSearchPanelEmitter';\nexport const PANEL_CHANGE_EVENT = 'PANEL_CHANGE_EVENT';\n\nexport const createPanelProviderMixin = () => ({\n  props: {\n    emitter: {\n      type: Object,\n      required: false,\n      default() {\n        return new Vue({\n          name: 'PanelProvider',\n        });\n      },\n    },\n  },\n  provide() {\n    return {\n      [PANEL_EMITTER_NAMESPACE]: this.emitter,\n    };\n  },\n  data() {\n    return {\n      canRefine: true,\n    };\n  },\n  created() {\n    this.emitter.$on(PANEL_CHANGE_EVENT, value => {\n      this.updateCanRefine(value);\n    });\n  },\n  beforeDestroy() {\n    this.emitter.$destroy();\n  },\n  methods: {\n    updateCanRefine(value) {\n      this.canRefine = value;\n    },\n  },\n});\n\nexport const createPanelConsumerMixin = ({ mapStateToCanRefine }) => ({\n  inject: {\n    emitter: {\n      from: PANEL_EMITTER_NAMESPACE,\n      default() {\n        return {\n          $emit: () => {},\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      state: null,\n      hasAlreadyEmitted: false,\n    };\n  },\n  watch: {\n    state: {\n      immediate: true,\n      handler(nextState, previousState) {\n        if (!nextState) {\n          return;\n        }\n\n        const previousCanRefine = mapStateToCanRefine(previousState || {});\n        const nextCanRefine = mapStateToCanRefine(nextState);\n\n        if (!this.hasAlreadyEmitted || previousCanRefine !== nextCanRefine) {\n          this.emitter.$emit(PANEL_CHANGE_EVENT, nextCanRefine);\n\n          this.hasAlreadyEmitted = true;\n        }\n      },\n    },\n  },\n});\n"],"names":["PANEL_EMITTER_NAMESPACE","PANEL_CHANGE_EVENT","createPanelProviderMixin","props","emitter","type","Object","required","default","Vue","name","provide","this","data","canRefine","created","$on","value","updateCanRefine","beforeDestroy","$destroy","methods","createPanelConsumerMixin","ref","inject","from","$emit","state","hasAlreadyEmitted","watch","immediate","handler","nextState","previousState","const","previousCanRefine","mapStateToCanRefine","nextCanRefine"],"mappings":"mBAEY,IAACA,EAA0B,4BAC1BC,EAAqB,qBAErBC,oBACXC,MAAO,CACLC,QAAS,CACPC,KAAMC,OACNC,UAAU,EACVC,mBACE,OAAO,IAAIC,EAAI,CACbC,KAAM,qBAKdC,yBACE,SAAO,IACmB,0BAAGC,KAAKR,WAGpCS,gBACE,MAAO,CACLC,WAAW,IAGfC,8BACEH,KAAKR,QAAQY,IAzBiB,8BAyBOC,GACnCL,EAAKM,gBAAgBD,MAGzBE,yBACEP,KAAKR,QAAQgB,YAEfC,QAAS,CACPH,yBAAgBD,GACdL,KAAKE,UAAYG,MAKVK,WAA4BC,sCACvCC,OAAQ,CACNpB,QAAS,CACPqB,KA3CiC,4BA4CjCjB,mBACE,MAAO,CACLkB,uBAKRb,gBACE,MAAO,CACLc,MAAO,KACPC,mBAAmB,IAGvBC,MAAO,CACLF,MAAO,CACLG,WAAW,EACXC,iBAAQC,EAAWC,GACjB,GAAKD,EAAL,CAIAE,IAAMC,EAAoBC,EAAoBH,GAAiB,IACzDI,EAAgBD,EAAoBJ,GAErCpB,KAAKgB,mBAAqBO,IAAsBE,IACnDzB,KAAKR,QAAQsB,MApEW,qBAoEeW,GAEvCzB,KAAKgB,mBAAoB"}